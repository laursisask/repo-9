{"version":3,"file":"chakra-ui.cjs.production.min.js","sources":["../src/AddButton/AddButton.tsx","../src/ArrayFieldItemTemplate/ArrayFieldItemTemplate.tsx","../src/ArrayFieldTemplate/ArrayFieldTemplate.tsx","../src/utils.ts","../src/BaseInputTemplate/BaseInputTemplate.tsx","../src/DescriptionField/DescriptionField.tsx","../src/ErrorList/ErrorList.tsx","../src/IconButton/ChakraIconButton.tsx","../src/IconButton/IconButton.tsx","../src/FieldErrorTemplate/FieldErrorTemplate.tsx","../src/FieldHelpTemplate/FieldHelpTemplate.tsx","../src/FieldTemplate/FieldTemplate.tsx","../src/ObjectFieldTemplate/ObjectFieldTemplate.tsx","../src/SubmitButton/SubmitButton.tsx","../src/TitleField/TitleField.tsx","../src/WrapIfAdditionalTemplate/WrapIfAdditionalTemplate.tsx","../src/Templates/Templates.ts","../src/AltDateWidget/AltDateWidget.tsx","../src/AltDateTimeWidget/AltDateTimeWidget.tsx","../src/CheckboxWidget/CheckboxWidget.tsx","../src/CheckboxesWidget/CheckboxesWidget.tsx","../src/RadioWidget/RadioWidget.tsx","../src/RangeWidget/RangeWidget.tsx","../src/SelectWidget/SelectWidget.tsx","../src/TextareaWidget/TextareaWidget.tsx","../src/UpDownWidget/UpDownWidget.tsx","../src/Widgets/Widgets.ts","../src/Theme/Theme.tsx","../src/Form/Form.tsx","../src/CssReset.tsx","../src/ChakraFrameProvider.tsx"],"sourcesContent":["import React from \"react\";\nimport {\n  FormContextType,\n  IconButtonProps,\n  RJSFSchema,\n  StrictRJSFSchema,\n} from \"@rjsf/utils\";\nimport { Button } from \"@chakra-ui/react\";\nimport { AddIcon } from \"@chakra-ui/icons\";\n\nexport default function AddButton<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>({ uiSchema, registry, ...props }: IconButtonProps<T, S, F>) {\n  return (\n    <Button leftIcon={<AddIcon />} {...props}>\n      Add Item\n    </Button>\n  );\n}\n","import React, { useMemo } from \"react\";\nimport { Box, ButtonGroup, HStack } from \"@chakra-ui/react\";\nimport {\n  ArrayFieldTemplateItemType,\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n} from \"@rjsf/utils\";\n\nexport default function ArrayFieldItemTemplate<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(props: ArrayFieldTemplateItemType<T, S, F>) {\n  const {\n    children,\n    disabled,\n    hasToolbar,\n    hasMoveDown,\n    hasMoveUp,\n    hasRemove,\n    index,\n    onDropIndexClick,\n    onReorderClick,\n    readonly,\n    uiSchema,\n    registry,\n  } = props;\n  const { MoveDownButton, MoveUpButton, RemoveButton } =\n    registry.templates.ButtonTemplates;\n  const onRemoveClick = useMemo(\n    () => onDropIndexClick(index),\n    [index, onDropIndexClick]\n  );\n\n  const onArrowUpClick = useMemo(\n    () => onReorderClick(index, index - 1),\n    [index, onReorderClick]\n  );\n\n  const onArrowDownClick = useMemo(\n    () => onReorderClick(index, index + 1),\n    [index, onReorderClick]\n  );\n\n  return (\n    <HStack alignItems={\"flex-end\"} py={1}>\n      <Box w=\"100%\">{children}</Box>\n      {hasToolbar && (\n        <Box>\n          <ButtonGroup isAttached mb={1}>\n            {(hasMoveUp || hasMoveDown) && (\n              <MoveUpButton\n                disabled={disabled || readonly || !hasMoveUp}\n                onClick={onArrowUpClick}\n                uiSchema={uiSchema}\n                registry={registry}\n              />\n            )}\n            {(hasMoveUp || hasMoveDown) && (\n              <MoveDownButton\n                disabled={disabled || readonly || !hasMoveDown}\n                onClick={onArrowDownClick}\n                uiSchema={uiSchema}\n                registry={registry}\n              />\n            )}\n            {hasRemove && (\n              <RemoveButton\n                disabled={disabled || readonly}\n                onClick={onRemoveClick}\n                uiSchema={uiSchema}\n                registry={registry}\n              />\n            )}\n          </ButtonGroup>\n        </Box>\n      )}\n    </HStack>\n  );\n}\n","import React from \"react\";\nimport { Box, Grid, GridItem } from \"@chakra-ui/react\";\nimport {\n  getTemplate,\n  getUiOptions,\n  ArrayFieldTemplateItemType,\n  ArrayFieldTemplateProps,\n  StrictRJSFSchema,\n  RJSFSchema,\n  FormContextType,\n} from \"@rjsf/utils\";\n\nexport default function ArrayFieldTemplate<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(props: ArrayFieldTemplateProps<T, S, F>) {\n  const {\n    canAdd,\n    disabled,\n    idSchema,\n    uiSchema,\n    items,\n    onAddClick,\n    readonly,\n    registry,\n    required,\n    schema,\n    title,\n  } = props;\n  const uiOptions = getUiOptions<T, S, F>(uiSchema);\n  const ArrayFieldDescriptionTemplate = getTemplate<\n    \"ArrayFieldDescriptionTemplate\",\n    T,\n    S,\n    F\n  >(\"ArrayFieldDescriptionTemplate\", registry, uiOptions);\n  const ArrayFieldItemTemplate = getTemplate<\"ArrayFieldItemTemplate\", T, S, F>(\n    \"ArrayFieldItemTemplate\",\n    registry,\n    uiOptions\n  );\n  const ArrayFieldTitleTemplate = getTemplate<\n    \"ArrayFieldTitleTemplate\",\n    T,\n    S,\n    F\n  >(\"ArrayFieldTitleTemplate\", registry, uiOptions);\n  // Button templates are not overridden in the uiSchema\n  const {\n    ButtonTemplates: { AddButton },\n  } = registry.templates;\n  return (\n    <Box>\n      <ArrayFieldTitleTemplate\n        idSchema={idSchema}\n        title={uiOptions.title || title}\n        schema={schema}\n        uiSchema={uiSchema}\n        required={required}\n        registry={registry}\n      />\n      <ArrayFieldDescriptionTemplate\n        idSchema={idSchema}\n        description={uiOptions.description || schema.description}\n        schema={schema}\n        uiSchema={uiSchema}\n        registry={registry}\n      />\n      <Grid key={`array-item-list-${idSchema.$id}`}>\n        <GridItem>\n          {items.length > 0 &&\n            items.map(\n              ({ key, ...itemProps }: ArrayFieldTemplateItemType<T, S, F>) => (\n                <ArrayFieldItemTemplate key={key} {...itemProps} />\n              )\n            )}\n        </GridItem>\n        {canAdd && (\n          <GridItem justifySelf={\"flex-end\"}>\n            <Box mt={2}>\n              <AddButton\n                className=\"array-item-add\"\n                onClick={onAddClick}\n                disabled={disabled || readonly}\n                uiSchema={uiSchema}\n                registry={registry}\n              />\n            </Box>\n          </GridItem>\n        )}\n      </Grid>\n    </Box>\n  );\n}\n","import { ChakraProps, shouldForwardProp } from \"@chakra-ui/react\";\nimport { UiSchema } from \"@rjsf/utils\";\n\nexport interface ChakraUiSchema extends Omit<UiSchema, \"ui:options\"> {\n  \"ui:options\"?: ChakraUiOptions;\n}\n\ntype ChakraUiOptions = UiSchema[\"ui:options\"] & { chakra?: ChakraProps };\n\ninterface GetChakraProps {\n  uiSchema?: ChakraUiSchema;\n}\n\nexport function getChakra({ uiSchema = {} }: GetChakraProps): ChakraProps {\n  const chakraProps =\n    (uiSchema[\"ui:options\"] && uiSchema[\"ui:options\"].chakra) || {};\n\n  Object.keys(chakraProps).forEach((key) => {\n    /**\n     * Leveraging `shouldForwardProp` to remove props\n     *\n     * This is a utility function that's used in `@chakra-ui/react`'s factory function.\n     * Normally, it prevents ChakraProps from being passed to the DOM.\n     * In this case we just want to delete the unknown props. So we flip the boolean.\n     */\n    if (shouldForwardProp(key)) {\n      delete (chakraProps as any)[key];\n    }\n  });\n\n  return chakraProps;\n}\n","import * as React from \"react\";\nimport { FormControl, FormLabel, Input } from \"@chakra-ui/react\";\nimport {\n  ariaDescribedByIds,\n  examplesId,\n  FormContextType,\n  getInputProps,\n  RJSFSchema,\n  StrictRJSFSchema,\n  WidgetProps,\n} from \"@rjsf/utils\";\nimport { getChakra } from \"../utils\";\n\nexport default function BaseInputTemplate<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(props: WidgetProps<T, S, F>) {\n  const {\n    id,\n    type,\n    value,\n    label,\n    schema,\n    uiSchema,\n    onChange,\n    onBlur,\n    onFocus,\n    options,\n    required,\n    readonly,\n    rawErrors,\n    autofocus,\n    placeholder,\n    disabled,\n    registry,\n  } = props;\n  const inputProps = getInputProps<T, S, F>(schema, type, options);\n  const chakraProps = getChakra({ uiSchema });\n  const { schemaUtils } = registry;\n\n  const _onChange = ({\n    target: { value },\n  }: React.ChangeEvent<HTMLInputElement>) =>\n    onChange(value === \"\" ? options.emptyValue : value);\n  const _onBlur = ({ target: { value } }: React.FocusEvent<HTMLInputElement>) =>\n    onBlur(id, value);\n  const _onFocus = ({\n    target: { value },\n  }: React.FocusEvent<HTMLInputElement>) => onFocus(id, value);\n\n  const displayLabel =\n    schemaUtils.getDisplayLabel(schema, uiSchema) &&\n    (!!label || !!schema.title);\n\n  return (\n    <FormControl\n      mb={1}\n      {...chakraProps}\n      isDisabled={disabled || readonly}\n      isRequired={required}\n      isReadOnly={readonly}\n      isInvalid={rawErrors && rawErrors.length > 0}\n    >\n      {displayLabel ? (\n        <FormLabel htmlFor={id} id={`${id}-label`}>\n          {label || schema.title}\n        </FormLabel>\n      ) : null}\n      <Input\n        id={id}\n        name={id}\n        value={value || value === 0 ? value : \"\"}\n        onChange={_onChange}\n        onBlur={_onBlur}\n        onFocus={_onFocus}\n        autoFocus={autofocus}\n        placeholder={placeholder}\n        {...inputProps}\n        list={schema.examples ? examplesId<T>(id) : undefined}\n        aria-describedby={ariaDescribedByIds<T>(id, !!schema.examples)}\n      />\n      {Array.isArray(schema.examples) ? (\n        <datalist id={examplesId<T>(id)}>\n          {(schema.examples as string[])\n            .concat(\n              schema.default && !schema.examples.includes(schema.default)\n                ? ([schema.default] as string[])\n                : []\n            )\n            .map((example: any) => {\n              return <option key={example} value={example} />;\n            })}\n        </datalist>\n      ) : null}\n    </FormControl>\n  );\n}\n","import React from \"react\";\nimport {\n  DescriptionFieldProps,\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n} from \"@rjsf/utils\";\nimport { Text } from \"@chakra-ui/react\";\n\nexport default function DescriptionField<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>({ description, id }: DescriptionFieldProps<T, S, F>) {\n  if (!description) {\n    return null;\n  }\n\n  if (typeof description === \"string\") {\n    return (\n      <Text id={id} mt={2} mb={4}>\n        {description}\n      </Text>\n    );\n  }\n\n  return <>{description}</>;\n}\n","import React from \"react\";\nimport {\n  ErrorListProps,\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n} from \"@rjsf/utils\";\nimport { List, ListIcon, ListItem, Alert, AlertTitle } from \"@chakra-ui/react\";\nimport { WarningIcon } from \"@chakra-ui/icons\";\n\nexport default function ErrorList<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>({ errors }: ErrorListProps<T, S, F>) {\n  return (\n    <Alert\n      flexDirection=\"column\"\n      alignItems=\"flex-start\"\n      gap={3}\n      status=\"error\"\n    >\n      <AlertTitle>Errors</AlertTitle>\n\n      <List>\n        {errors.map((error, i) => (\n          <ListItem key={i}>\n            <ListIcon as={WarningIcon} color=\"red.500\" />\n            {error.stack}\n          </ListItem>\n        ))}\n      </List>\n    </Alert>\n  );\n}\n","import React from \"react\";\nimport { IconButton } from \"@chakra-ui/react\";\nimport { IconButtonProps as ChakraIconButtonProps } from \"@chakra-ui/button/dist/declarations/src/icon-button\";\nimport {\n  FormContextType,\n  IconButtonProps,\n  RJSFSchema,\n  StrictRJSFSchema,\n} from \"@rjsf/utils\";\n\nfunction ChakraIconButton<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(props: IconButtonProps<T, S, F>) {\n  const { icon, iconType, uiSchema, registry, ...otherProps } = props;\n  return (\n    <IconButton\n      aria-label={props.title!}\n      {...otherProps}\n      icon={icon as ChakraIconButtonProps[\"icon\"]}\n    />\n  );\n}\n\nChakraIconButton.displayName = \"ChakraIconButton\";\n\nexport default React.memo(ChakraIconButton) as typeof ChakraIconButton;\n","import React from \"react\";\n\nimport {\n  FormContextType,\n  IconButtonProps,\n  RJSFSchema,\n  StrictRJSFSchema,\n} from \"@rjsf/utils\";\n\nimport { ArrowUpIcon, ArrowDownIcon, DeleteIcon } from \"@chakra-ui/icons\";\nimport ChakraIconButton from \"./ChakraIconButton\";\n\nexport function MoveDownButton<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(props: IconButtonProps<T, S, F>) {\n  return (\n    <ChakraIconButton<T, S, F>\n      title=\"Move down\"\n      {...props}\n      icon={<ArrowDownIcon />}\n    />\n  );\n}\n\nexport function MoveUpButton<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(props: IconButtonProps<T, S, F>) {\n  return (\n    <ChakraIconButton<T, S, F>\n      title=\"Move up\"\n      {...props}\n      icon={<ArrowUpIcon />}\n    />\n  );\n}\n\nexport function RemoveButton<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(props: IconButtonProps<T, S, F>) {\n  return (\n    <ChakraIconButton<T, S, F>\n      title=\"Remove\"\n      {...props}\n      icon={<DeleteIcon />}\n    />\n  );\n}\n","import React from \"react\";\nimport {\n  errorId,\n  FieldErrorProps,\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n} from \"@rjsf/utils\";\nimport { FormErrorMessage, List, ListItem } from \"@chakra-ui/react\";\n\n/** The `FieldErrorTemplate` component renders the errors local to the particular field\n *\n * @param props - The `FieldErrorProps` for the errors being rendered\n */\nexport default function FieldErrorTemplate<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(props: FieldErrorProps<T, S, F>) {\n  const { errors = [], idSchema } = props;\n  if (errors.length === 0) {\n    return null;\n  }\n  const id = errorId<T>(idSchema);\n\n  return (\n    <List>\n      {errors.map((error, i: number) => {\n        return (\n          <ListItem key={i}>\n            <FormErrorMessage id={id}>{error}</FormErrorMessage>\n          </ListItem>\n        );\n      })}\n    </List>\n  );\n}\n","import React from \"react\";\nimport {\n  helpId,\n  FieldHelpProps,\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n} from \"@rjsf/utils\";\nimport { FormHelperText } from \"@chakra-ui/react\";\n\n/** The `FieldHelpTemplate` component renders any help desired for a field\n *\n * @param props - The `FieldHelpProps` to be rendered\n */\nexport default function FieldHelpTemplate<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(props: FieldHelpProps<T, S, F>) {\n  const { idSchema, help } = props;\n  if (!help) {\n    return null;\n  }\n  const id = helpId<T>(idSchema);\n  return <FormHelperText id={id}>{help}</FormHelperText>;\n}\n","import React from \"react\";\nimport {\n  FieldTemplateProps,\n  FormContextType,\n  getTemplate,\n  getUiOptions,\n  RJSFSchema,\n  StrictRJSFSchema,\n} from \"@rjsf/utils\";\nimport { Text, FormControl } from \"@chakra-ui/react\";\n\nexport default function FieldTemplate<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(props: FieldTemplateProps<T, S, F>) {\n  const {\n    id,\n    children,\n    classNames,\n    style,\n    disabled,\n    displayLabel,\n    hidden,\n    label,\n    onDropPropertyClick,\n    onKeyChange,\n    readonly,\n    registry,\n    required,\n    rawErrors = [],\n    errors,\n    help,\n    rawDescription,\n    schema,\n    uiSchema,\n  } = props;\n  const uiOptions = getUiOptions<T, S, F>(uiSchema);\n  const WrapIfAdditionalTemplate = getTemplate<\n    \"WrapIfAdditionalTemplate\",\n    T,\n    S,\n    F\n  >(\"WrapIfAdditionalTemplate\", registry, uiOptions);\n\n  if (hidden) {\n    return <div style={{ display: \"none\" }}>{children}</div>;\n  }\n\n  return (\n    <WrapIfAdditionalTemplate\n      classNames={classNames}\n      style={style}\n      disabled={disabled}\n      id={id}\n      label={label}\n      onDropPropertyClick={onDropPropertyClick}\n      onKeyChange={onKeyChange}\n      readonly={readonly}\n      required={required}\n      schema={schema}\n      uiSchema={uiSchema}\n      registry={registry}\n    >\n      <FormControl\n        isRequired={required}\n        isInvalid={rawErrors && rawErrors.length > 0}\n      >\n        {children}\n        {displayLabel && rawDescription ? (\n          <Text mt={2}>{rawDescription}</Text>\n        ) : null}\n        {errors}\n        {help}\n      </FormControl>\n    </WrapIfAdditionalTemplate>\n  );\n}\n","import React from \"react\";\nimport { Grid, GridItem } from \"@chakra-ui/react\";\nimport {\n  canExpand,\n  descriptionId,\n  FormContextType,\n  getTemplate,\n  getUiOptions,\n  ObjectFieldTemplateProps,\n  RJSFSchema,\n  StrictRJSFSchema,\n  titleId,\n} from \"@rjsf/utils\";\n\nexport default function ObjectFieldTemplate<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(props: ObjectFieldTemplateProps<T, S, F>) {\n  const {\n    description,\n    title,\n    properties,\n    required,\n    disabled,\n    readonly,\n    uiSchema,\n    idSchema,\n    schema,\n    formData,\n    onAddClick,\n    registry,\n  } = props;\n  const uiOptions = getUiOptions<T, S, F>(uiSchema);\n  const TitleFieldTemplate = getTemplate<\"TitleFieldTemplate\", T, S, F>(\n    \"TitleFieldTemplate\",\n    registry,\n    uiOptions\n  );\n  const DescriptionFieldTemplate = getTemplate<\n    \"DescriptionFieldTemplate\",\n    T,\n    S,\n    F\n  >(\"DescriptionFieldTemplate\", registry, uiOptions);\n  // Button templates are not overridden in the uiSchema\n  const {\n    ButtonTemplates: { AddButton },\n  } = registry.templates;\n\n  return (\n    <React.Fragment>\n      {(uiOptions.title || title) && (\n        <TitleFieldTemplate\n          id={titleId<T>(idSchema)}\n          title={uiOptions.title || title}\n          required={required}\n          schema={schema}\n          uiSchema={uiSchema}\n          registry={registry}\n        />\n      )}\n      {(uiOptions.description || description) && (\n        <DescriptionFieldTemplate\n          id={descriptionId<T>(idSchema)}\n          description={uiOptions.description || description!}\n          schema={schema}\n          uiSchema={uiSchema}\n          registry={registry}\n        />\n      )}\n      <Grid gap={description ? 2 : 6} mb={4}>\n        {properties.map((element, index) =>\n          element.hidden ? (\n            element.content\n          ) : (\n            <GridItem key={`${idSchema.$id}-${element.name}-${index}`}>\n              {element.content}\n            </GridItem>\n          )\n        )}\n        {canExpand<T, S, F>(schema, uiSchema, formData) && (\n          <GridItem justifySelf=\"flex-end\">\n            <AddButton\n              className=\"object-property-expand\"\n              onClick={onAddClick(schema)}\n              disabled={disabled || readonly}\n              uiSchema={uiSchema}\n              registry={registry}\n            />\n          </GridItem>\n        )}\n      </Grid>\n    </React.Fragment>\n  );\n}\n","import React from \"react\";\nimport { Box, Button } from \"@chakra-ui/react\";\nimport {\n  FormContextType,\n  getSubmitButtonOptions,\n  RJSFSchema,\n  StrictRJSFSchema,\n  SubmitButtonProps,\n} from \"@rjsf/utils\";\n\nexport default function SubmitButton<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>({ uiSchema }: SubmitButtonProps<T, S, F>) {\n  const {\n    submitText,\n    norender,\n    props: submitButtonProps,\n  } = getSubmitButtonOptions(uiSchema);\n  if (norender) {\n    return null;\n  }\n\n  return (\n    <Box marginTop={3}>\n      <Button type=\"submit\" variant=\"solid\" {...submitButtonProps}>\n        {submitText}\n      </Button>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport {\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n  TitleFieldProps,\n} from \"@rjsf/utils\";\nimport { Box, Divider, Heading } from \"@chakra-ui/react\";\n\nexport default function TitleField<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>({ id, title }: TitleFieldProps<T, S, F>) {\n  return (\n    <Box id={id} mt={1} mb={4}>\n      <Heading as=\"h5\">{title}</Heading>\n      <Divider />\n    </Box>\n  );\n}\n","import React from \"react\";\nimport {\n  ADDITIONAL_PROPERTY_FLAG,\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n  WrapIfAdditionalTemplateProps,\n} from \"@rjsf/utils\";\nimport {\n  FormControl,\n  FormLabel,\n  Grid,\n  GridItem,\n  Input,\n} from \"@chakra-ui/react\";\n\nexport default function WrapIfAdditionalTemplate<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(props: WrapIfAdditionalTemplateProps<T, S, F>) {\n  const {\n    children,\n    classNames,\n    style,\n    disabled,\n    id,\n    label,\n    onDropPropertyClick,\n    onKeyChange,\n    readonly,\n    registry,\n    required,\n    schema,\n    uiSchema,\n  } = props;\n  // Button templates are not overridden in the uiSchema\n  const { RemoveButton } = registry.templates.ButtonTemplates;\n  const additional = ADDITIONAL_PROPERTY_FLAG in schema;\n  if (!additional) {\n    return (\n      <div className={classNames} style={style}>\n        {children}\n      </div>\n    );\n  }\n  const keyLabel = `${label} Key`;\n\n  const handleBlur = ({ target }: React.FocusEvent<HTMLInputElement>) =>\n    onKeyChange(target.value);\n\n  return (\n    <Grid\n      key={`${id}-key`}\n      className={classNames}\n      style={style}\n      alignItems=\"center\"\n      gap={2}\n    >\n      <GridItem>\n        <FormControl isRequired={required}>\n          <FormLabel htmlFor={`${id}-key`} id={`${id}-key-label`}>\n            {keyLabel}\n          </FormLabel>\n          <Input\n            defaultValue={label}\n            disabled={disabled || readonly}\n            id={`${id}-key`}\n            name={`${id}-key`}\n            onBlur={!readonly ? handleBlur : undefined}\n            type=\"text\"\n            mb={1}\n          />\n        </FormControl>\n      </GridItem>\n      <GridItem>{children}</GridItem>\n      <GridItem>\n        <RemoveButton\n          disabled={disabled || readonly}\n          onClick={onDropPropertyClick(label)}\n          uiSchema={uiSchema}\n          registry={registry}\n        />\n      </GridItem>\n    </Grid>\n  );\n}\n","import AddButton from \"../AddButton\";\nimport ArrayFieldItemTemplate from \"../ArrayFieldItemTemplate\";\nimport ArrayFieldTemplate from \"../ArrayFieldTemplate\";\nimport BaseInputTemplate from \"../BaseInputTemplate/BaseInputTemplate\";\nimport DescriptionField from \"../DescriptionField\";\nimport ErrorList from \"../ErrorList\";\nimport { MoveDownButton, MoveUpButton, RemoveButton } from \"../IconButton\";\nimport FieldErrorTemplate from \"../FieldErrorTemplate\";\nimport FieldHelpTemplate from \"../FieldHelpTemplate\";\nimport FieldTemplate from \"../FieldTemplate\";\nimport ObjectFieldTemplate from \"../ObjectFieldTemplate\";\nimport SubmitButton from \"../SubmitButton\";\nimport TitleField from \"../TitleField\";\nimport WrapIfAdditionalTemplate from \"../WrapIfAdditionalTemplate\";\nimport {\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n  TemplatesType,\n} from \"@rjsf/utils\";\n\nexport function generateTemplates<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(): Partial<TemplatesType<T, S, F>> {\n  return {\n    ArrayFieldItemTemplate,\n    ArrayFieldTemplate,\n    BaseInputTemplate,\n    ButtonTemplates: {\n      AddButton,\n      MoveDownButton,\n      MoveUpButton,\n      RemoveButton,\n      SubmitButton,\n    },\n    DescriptionFieldTemplate: DescriptionField,\n    ErrorListTemplate: ErrorList,\n    FieldErrorTemplate,\n    FieldHelpTemplate,\n    FieldTemplate,\n    ObjectFieldTemplate,\n    TitleFieldTemplate: TitleField,\n    WrapIfAdditionalTemplate,\n  };\n}\n\nexport default generateTemplates();\n","import React, { MouseEvent, useEffect, useState } from \"react\";\nimport {\n  ariaDescribedByIds,\n  DateObject,\n  FormContextType,\n  pad,\n  parseDateString,\n  RJSFSchema,\n  StrictRJSFSchema,\n  toDateString,\n  WidgetProps,\n} from \"@rjsf/utils\";\nimport { Box, Button } from \"@chakra-ui/react\";\n\nconst rangeOptions = (start: number, stop: number) => {\n  const options = [];\n  for (let i = start; i <= stop; i++) {\n    options.push({ value: i, label: pad(i, 2) });\n  }\n  return options;\n};\n\nfunction DateElement<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(props: WidgetProps<T, S, F>) {\n  const { SelectWidget } = props.registry.widgets;\n  const value = props.value ? props.value : undefined;\n  return (\n    <SelectWidget\n      {...props}\n      label={\"\"}\n      className=\"form-control\"\n      onChange={(elemValue: WidgetProps<T, S, F>) =>\n        props.select(props.type, elemValue)\n      }\n      options={{\n        enumOptions: rangeOptions(props.range[0], props.range[1]),\n      }}\n      placeholder={props.type}\n      schema={{ type: \"integer\" } as S}\n      value={value}\n      aria-describedby={ariaDescribedByIds<T>(props.name)}\n    />\n  );\n}\n\ninterface AltDateStateType extends DateObject {\n  [x: string]: number | undefined;\n}\n\nconst readyForChange = (state: AltDateStateType) => {\n  return Object.keys(state).every(\n    (key) => typeof state[key] !== \"undefined\" && state[key] !== -1\n  );\n};\n\nfunction AltDateWidget<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(props: WidgetProps<T, S, F>) {\n  const {\n    autofocus,\n    disabled,\n    id,\n    onBlur,\n    onChange,\n    onFocus,\n    options,\n    readonly,\n    registry,\n    showTime,\n    value,\n  } = props;\n  const [state, setState] = useState(parseDateString(value, showTime));\n  useEffect(() => {\n    setState(parseDateString(value, showTime));\n  }, [showTime, value]);\n\n  const handleChange = (property: string, nextValue: string) => {\n    const nextState = {\n      ...state,\n      [property]: typeof nextValue === \"undefined\" ? -1 : nextValue,\n    };\n\n    if (readyForChange(nextState)) {\n      onChange(toDateString(nextState, showTime));\n    } else {\n      setState(nextState);\n    }\n  };\n\n  const handleNow = (event: MouseEvent<HTMLButtonElement>) => {\n    event.preventDefault();\n    if (disabled || readonly) {\n      return;\n    }\n    const nextState = parseDateString(new Date().toJSON(), showTime);\n    onChange(toDateString(nextState, showTime));\n  };\n\n  const handleClear = (event: MouseEvent<HTMLButtonElement>) => {\n    event.preventDefault();\n    if (disabled || readonly) {\n      return;\n    }\n    onChange(undefined);\n  };\n\n  const dateElementProps = () => {\n    const { year, month, day, hour, minute, second } = state;\n\n    const data: { type: string; range: any; value?: number }[] = [\n      { type: \"year\", range: options.yearsRange, value: year },\n      { type: \"month\", range: [1, 12], value: month },\n      { type: \"day\", range: [1, 31], value: day },\n    ];\n\n    if (showTime) {\n      data.push(\n        { type: \"hour\", range: [0, 23], value: hour },\n        { type: \"minute\", range: [0, 59], value: minute },\n        { type: \"second\", range: [0, 59], value: second }\n      );\n    }\n\n    return data;\n  };\n\n  return (\n    <Box>\n      <Box display=\"flex\" flexWrap=\"wrap\" alignItems=\"center\" justify=\"center\">\n        {dateElementProps().map((elemProps: any, i) => {\n          const elemId = id + \"_\" + elemProps.type;\n          return (\n            <Box key={elemId} mr=\"2\" mb=\"2\">\n              <DateElement<T, S, F>\n                {...props}\n                {...elemProps}\n                autofocus={autofocus && i === 0}\n                disabled={disabled}\n                id={elemId}\n                name={id}\n                onBlur={onBlur}\n                onFocus={onFocus}\n                readonly={readonly}\n                registry={registry}\n                select={handleChange}\n                value={elemProps.value < 0 ? \"\" : elemProps.value}\n              />\n            </Box>\n          );\n        })}\n      </Box>\n      <Box display=\"flex\">\n        {!options.hideNowButton && (\n          <Button\n            onClick={(e: MouseEvent<HTMLButtonElement>) => handleNow(e)}\n            mr=\"2\"\n          >\n            Now\n          </Button>\n        )}\n        {!options.hideClearButton && (\n          <Button\n            onClick={(e: MouseEvent<HTMLButtonElement>) => handleClear(e)}\n          >\n            Clear\n          </Button>\n        )}\n      </Box>\n    </Box>\n  );\n}\n\nAltDateWidget.defaultProps = {\n  autofocus: false,\n  disabled: false,\n  readonly: false,\n  showTime: false,\n  options: {\n    yearsRange: [1900, new Date().getFullYear() + 2],\n  },\n};\n\nexport default AltDateWidget;\n","import React from \"react\";\n\nimport _AltDateWidget from \"../AltDateWidget\";\nimport {\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n  WidgetProps,\n} from \"@rjsf/utils\";\n\nfunction AltDateTimeWidget<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(props: WidgetProps<T, S, F>) {\n  const { AltDateWidget } = props.registry.widgets;\n  return <AltDateWidget {...props} showTime />;\n}\n\nAltDateTimeWidget.defaultProps = {\n  ..._AltDateWidget.defaultProps,\n  showTime: true,\n};\n\nexport default AltDateTimeWidget;\n","import React from \"react\";\nimport { Checkbox, FormControl, Text } from \"@chakra-ui/react\";\nimport {\n  ariaDescribedByIds,\n  WidgetProps,\n  schemaRequiresTrueValue,\n  StrictRJSFSchema,\n  RJSFSchema,\n  FormContextType,\n} from \"@rjsf/utils\";\nimport { getChakra } from \"../utils\";\n\nexport default function CheckboxWidget<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(props: WidgetProps<T, S, F>) {\n  const {\n    id,\n    value,\n    disabled,\n    readonly,\n    onChange,\n    onBlur,\n    onFocus,\n    label,\n    uiSchema,\n    schema,\n  } = props;\n  const chakraProps = getChakra({ uiSchema });\n  // Because an unchecked checkbox will cause html5 validation to fail, only add\n  // the \"required\" attribute if the field value must be \"true\", due to the\n  // \"const\" or \"enum\" keywords\n  const required = schemaRequiresTrueValue<S>(schema);\n\n  const _onChange = ({\n    target: { checked },\n  }: React.ChangeEvent<HTMLInputElement>) => onChange(checked);\n  const _onBlur = ({\n    target: { value },\n  }: React.FocusEvent<HTMLInputElement | any>) => onBlur(id, value);\n  const _onFocus = ({\n    target: { value },\n  }: React.FocusEvent<HTMLInputElement | any>) => onFocus(id, value);\n\n  return (\n    <FormControl mb={1} {...chakraProps} isRequired={required}>\n      <Checkbox\n        id={id}\n        name={id}\n        isChecked={typeof value === \"undefined\" ? false : value}\n        isDisabled={disabled || readonly}\n        onChange={_onChange}\n        onBlur={_onBlur}\n        onFocus={_onFocus}\n        aria-describedby={ariaDescribedByIds<T>(id)}\n      >\n        {label && <Text>{label}</Text>}\n      </Checkbox>\n    </FormControl>\n  );\n}\n","import React from \"react\";\nimport {\n  CheckboxGroup,\n  Checkbox,\n  FormLabel,\n  FormControl,\n  Text,\n  Stack,\n} from \"@chakra-ui/react\";\nimport {\n  ariaDescribedByIds,\n  enumOptionsIndexForValue,\n  enumOptionsIsSelected,\n  enumOptionsValueForIndex,\n  optionId,\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n  WidgetProps,\n} from \"@rjsf/utils\";\nimport { getChakra } from \"../utils\";\n\nexport default function CheckboxesWidget<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(props: WidgetProps<T, S, F>) {\n  const {\n    id,\n    disabled,\n    options,\n    value,\n    readonly,\n    onChange,\n    onBlur,\n    onFocus,\n    required,\n    label,\n    uiSchema,\n    rawErrors = [],\n    schema,\n  } = props;\n  const { enumOptions, enumDisabled, emptyValue } = options;\n  const chakraProps = getChakra({ uiSchema });\n  const checkboxesValues = Array.isArray(value) ? value : [value];\n\n  const _onBlur = ({\n    target: { value },\n  }: React.FocusEvent<HTMLInputElement | any>) =>\n    onBlur(id, enumOptionsValueForIndex<S>(value, enumOptions, emptyValue));\n  const _onFocus = ({\n    target: { value },\n  }: React.FocusEvent<HTMLInputElement | any>) =>\n    onFocus(id, enumOptionsValueForIndex<S>(value, enumOptions, emptyValue));\n\n  const row = options ? options.inline : false;\n  const selectedIndexes = enumOptionsIndexForValue<S>(\n    value,\n    enumOptions,\n    true\n  ) as string[];\n\n  return (\n    <FormControl\n      mb={1}\n      {...chakraProps}\n      isDisabled={disabled || readonly}\n      isRequired={required}\n      isReadOnly={readonly}\n      isInvalid={rawErrors && rawErrors.length > 0}\n    >\n      <FormLabel htmlFor={id} id={`${id}-label`}>\n        {label || schema.title}\n      </FormLabel>\n      <CheckboxGroup\n        onChange={(option) =>\n          onChange(enumOptionsValueForIndex<S>(option, enumOptions, emptyValue))\n        }\n        defaultValue={selectedIndexes}\n        aria-describedby={ariaDescribedByIds<T>(id)}\n      >\n        <Stack direction={row ? \"row\" : \"column\"}>\n          {Array.isArray(enumOptions) &&\n            enumOptions.map((option, index) => {\n              const checked = enumOptionsIsSelected<S>(\n                option.value,\n                checkboxesValues\n              );\n              const itemDisabled =\n                Array.isArray(enumDisabled) &&\n                enumDisabled.indexOf(option.value) !== -1;\n              return (\n                <Checkbox\n                  key={index}\n                  id={optionId(id, index)}\n                  name={id}\n                  value={String(index)}\n                  isChecked={checked}\n                  isDisabled={disabled || itemDisabled || readonly}\n                  onBlur={_onBlur}\n                  onFocus={_onFocus}\n                >\n                  {option.label && <Text>{option.label}</Text>}\n                </Checkbox>\n              );\n            })}\n        </Stack>\n      </CheckboxGroup>\n    </FormControl>\n  );\n}\n","import React from \"react\";\nimport {\n  FormControl,\n  FormLabel,\n  Radio,\n  RadioGroup,\n  Stack,\n} from \"@chakra-ui/react\";\nimport {\n  ariaDescribedByIds,\n  enumOptionsIndexForValue,\n  enumOptionsValueForIndex,\n  optionId,\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n  WidgetProps,\n} from \"@rjsf/utils\";\nimport { getChakra } from \"../utils\";\n\nexport default function RadioWidget<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>({\n  id,\n  schema,\n  options,\n  value,\n  required,\n  disabled,\n  readonly,\n  label,\n  onChange,\n  onBlur,\n  onFocus,\n  uiSchema,\n}: WidgetProps<T, S, F>) {\n  const { enumOptions, enumDisabled, emptyValue } = options;\n  const chakraProps = getChakra({ uiSchema });\n\n  const _onChange = (nextValue: any) =>\n    onChange(enumOptionsValueForIndex<S>(nextValue, enumOptions, emptyValue));\n  const _onBlur = ({ target: { value } }: React.FocusEvent<HTMLInputElement>) =>\n    onBlur(id, enumOptionsValueForIndex<S>(value, enumOptions, emptyValue));\n  const _onFocus = ({\n    target: { value },\n  }: React.FocusEvent<HTMLInputElement>) =>\n    onFocus(id, enumOptionsValueForIndex<S>(value, enumOptions, emptyValue));\n\n  const row = options ? options.inline : false;\n  const selectedIndex = enumOptionsIndexForValue<S>(\n    value,\n    enumOptions\n  ) as string;\n\n  return (\n    <FormControl\n      mb={1}\n      {...chakraProps}\n      isDisabled={disabled || readonly}\n      isRequired={required}\n      isReadOnly={readonly}\n    >\n      <FormLabel htmlFor={id} id={`${id}-label`}>\n        {label || schema.title}\n      </FormLabel>\n      <RadioGroup\n        onChange={_onChange}\n        onBlur={_onBlur}\n        onFocus={_onFocus}\n        value={selectedIndex}\n        name={id}\n        aria-describedby={ariaDescribedByIds<T>(id)}\n      >\n        <Stack direction={row ? \"row\" : \"column\"}>\n          {Array.isArray(enumOptions) &&\n            enumOptions.map((option, index) => {\n              const itemDisabled =\n                Array.isArray(enumDisabled) &&\n                enumDisabled.indexOf(option.value) !== -1;\n\n              return (\n                <Radio\n                  value={String(index)}\n                  key={index}\n                  id={optionId(id, index)}\n                  disabled={disabled || itemDisabled || readonly}\n                >\n                  {option.label}\n                </Radio>\n              );\n            })}\n        </Stack>\n      </RadioGroup>\n    </FormControl>\n  );\n}\n","import React from \"react\";\nimport {\n  FormControl,\n  FormLabel,\n  Slider,\n  SliderFilledTrack,\n  SliderThumb,\n  SliderTrack,\n} from \"@chakra-ui/react\";\nimport {\n  ariaDescribedByIds,\n  FormContextType,\n  rangeSpec,\n  RJSFSchema,\n  StrictRJSFSchema,\n  WidgetProps,\n} from \"@rjsf/utils\";\nimport { getChakra } from \"../utils\";\n\nexport default function RangeWidget<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>({\n  value,\n  readonly,\n  disabled,\n  onBlur,\n  onFocus,\n  options,\n  schema,\n  uiSchema,\n  onChange,\n  label,\n  id,\n  registry,\n}: WidgetProps<T, S, F>) {\n  const { schemaUtils } = registry;\n  const chakraProps = getChakra({ uiSchema });\n\n  const sliderWidgetProps = { value, label, id, ...rangeSpec<S>(schema) };\n\n  const displayLabel =\n    schemaUtils.getDisplayLabel(schema, uiSchema) &&\n    (!!label || !!schema.title);\n\n  const _onChange = (value: undefined | number) =>\n    onChange(value === undefined ? options.emptyValue : value);\n  const _onBlur = ({ target: { value } }: React.FocusEvent<HTMLInputElement>) =>\n    onBlur(id, value);\n  const _onFocus = ({\n    target: { value },\n  }: React.FocusEvent<HTMLInputElement>) => onFocus(id, value);\n\n  return (\n    <FormControl mb={1} {...chakraProps}>\n      {displayLabel ? (\n        <FormLabel htmlFor={id}>{label || schema.title}</FormLabel>\n      ) : null}\n      <Slider\n        {...sliderWidgetProps}\n        id={id}\n        name={id}\n        isDisabled={disabled || readonly}\n        onChange={_onChange}\n        onBlur={_onBlur}\n        onFocus={_onFocus}\n        aria-describedby={ariaDescribedByIds<T>(id)}\n      >\n        <SliderTrack>\n          <SliderFilledTrack />\n        </SliderTrack>\n        <SliderThumb />\n      </Slider>\n    </FormControl>\n  );\n}\n","import React from \"react\";\nimport { FormControl, FormLabel } from \"@chakra-ui/react\";\nimport {\n  ariaDescribedByIds,\n  EnumOptionsType,\n  enumOptionsIndexForValue,\n  enumOptionsValueForIndex,\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n  WidgetProps,\n} from \"@rjsf/utils\";\nimport { getChakra } from \"../utils\";\nimport { OptionsOrGroups, Select } from \"chakra-react-select\";\n\nexport default function SelectWidget<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(props: WidgetProps<T, S, F>) {\n  const {\n    schema,\n    id,\n    options,\n    label,\n    placeholder,\n    multiple,\n    required,\n    disabled,\n    readonly,\n    value,\n    autofocus,\n    onChange,\n    onBlur,\n    onFocus,\n    rawErrors = [],\n    uiSchema,\n  } = props;\n  const { enumOptions, enumDisabled, emptyValue } = options;\n  const chakraProps = getChakra({ uiSchema });\n\n  const _onMultiChange = (e: any) => {\n    return onChange(\n      enumOptionsValueForIndex<S>(\n        e.map((v: { value: any }) => {\n          return v.value;\n        }),\n        enumOptions,\n        emptyValue\n      )\n    );\n  };\n\n  const _onChange = (e: any) => {\n    return onChange(\n      enumOptionsValueForIndex<S>(e.value, enumOptions, emptyValue)\n    );\n  };\n\n  const _onBlur = ({ target: { value } }: React.FocusEvent<HTMLInputElement>) =>\n    onBlur(id, enumOptionsValueForIndex<S>(value, enumOptions, emptyValue));\n\n  const _onFocus = ({\n    target: { value },\n  }: React.FocusEvent<HTMLInputElement>) =>\n    onFocus(id, enumOptionsValueForIndex<S>(value, enumOptions, emptyValue));\n\n  const _valueLabelMap: any = {};\n  const displayEnumOptions: OptionsOrGroups<any, any> = Array.isArray(\n    enumOptions\n  )\n    ? enumOptions.map((option: EnumOptionsType<S>, index: number) => {\n        const { value, label } = option;\n        _valueLabelMap[index] = label || String(value);\n        return {\n          label,\n          value: String(index),\n          isDisabled:\n            Array.isArray(enumDisabled) && enumDisabled.indexOf(value) !== -1,\n        };\n      })\n    : [];\n\n  const isMultiple = typeof multiple !== \"undefined\" && Boolean(enumOptions);\n  const selectedIndex = enumOptionsIndexForValue<S>(\n    value,\n    enumOptions,\n    isMultiple\n  );\n  const formValue: any = isMultiple\n    ? ((selectedIndex as string[]) || []).map((i: string) => {\n        return {\n          label: _valueLabelMap[i],\n          value: i,\n        };\n      })\n    : {\n        label: _valueLabelMap[selectedIndex as string] || \"\",\n        selectedIndex,\n      };\n\n  return (\n    <FormControl\n      mb={1}\n      {...chakraProps}\n      isDisabled={disabled || readonly}\n      isRequired={required}\n      isReadOnly={readonly}\n      isInvalid={rawErrors && rawErrors.length > 0}\n    >\n      {(label || schema.title) && (\n        <FormLabel htmlFor={isMultiple ? undefined : id}>\n          {label || schema.title}\n        </FormLabel>\n      )}\n      <Select\n        inputId={id}\n        name={id}\n        isMulti={isMultiple}\n        options={displayEnumOptions}\n        placeholder={placeholder}\n        closeMenuOnSelect={!isMultiple}\n        onBlur={_onBlur}\n        onChange={isMultiple ? _onMultiChange : _onChange}\n        onFocus={_onFocus}\n        autoFocus={autofocus}\n        value={formValue}\n        aria-describedby={ariaDescribedByIds<T>(id)}\n      />\n    </FormControl>\n  );\n}\n","import React from \"react\";\nimport { FormControl, FormLabel, Textarea } from \"@chakra-ui/react\";\nimport {\n  ariaDescribedByIds,\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n  WidgetProps,\n} from \"@rjsf/utils\";\nimport { getChakra } from \"../utils\";\n\nexport default function TextareaWidget<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>({\n  id,\n  placeholder,\n  value,\n  label,\n  disabled,\n  autofocus,\n  readonly,\n  onBlur,\n  onFocus,\n  onChange,\n  options,\n  schema,\n  uiSchema,\n  required,\n  rawErrors,\n  registry,\n}: WidgetProps<T, S, F>) {\n  const chakraProps = getChakra({ uiSchema });\n  const { schemaUtils } = registry;\n  const displayLabel =\n    schemaUtils.getDisplayLabel(schema, uiSchema) &&\n    (!!label || !!schema.title);\n\n  const _onChange = ({\n    target: { value },\n  }: React.ChangeEvent<HTMLTextAreaElement>) =>\n    onChange(value === \"\" ? options.emptyValue : value);\n  const _onBlur = ({\n    target: { value },\n  }: React.FocusEvent<HTMLTextAreaElement>) => onBlur(id, value);\n  const _onFocus = ({\n    target: { value },\n  }: React.FocusEvent<HTMLTextAreaElement>) => onFocus(id, value);\n\n  return (\n    <FormControl\n      mb={1}\n      {...chakraProps}\n      isDisabled={disabled || readonly}\n      isRequired={required}\n      isReadOnly={readonly}\n      isInvalid={rawErrors && rawErrors.length > 0}\n    >\n      {displayLabel ? (\n        <FormLabel htmlFor={id}>{label || schema.title}</FormLabel>\n      ) : null}\n      <Textarea\n        id={id}\n        name={id}\n        value={value ?? \"\"}\n        placeholder={placeholder}\n        autoFocus={autofocus}\n        onChange={_onChange}\n        onBlur={_onBlur}\n        onFocus={_onFocus}\n        aria-describedby={ariaDescribedByIds<T>(id)}\n      />\n    </FormControl>\n  );\n}\n","import React from \"react\";\nimport {\n  NumberInput,\n  NumberDecrementStepper,\n  NumberIncrementStepper,\n  NumberInputField,\n  NumberInputStepper,\n  FormControl,\n  FormLabel,\n} from \"@chakra-ui/react\";\nimport {\n  ariaDescribedByIds,\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n  WidgetProps,\n} from \"@rjsf/utils\";\nimport { getChakra } from \"../utils\";\n\nexport default function UpDownWidget<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(props: WidgetProps<T, S, F>) {\n  const {\n    id,\n    schema,\n    uiSchema,\n    readonly,\n    disabled,\n    label,\n    value,\n    onChange,\n    onBlur,\n    onFocus,\n    rawErrors,\n    required,\n    registry,\n  } = props;\n\n  const { schemaUtils } = registry;\n  const displayLabel =\n    schemaUtils.getDisplayLabel(schema, uiSchema) &&\n    (!!label || !!schema.title);\n\n  const chakraProps = getChakra({ uiSchema });\n\n  const _onChange = (value: string | number) => onChange(value);\n  const _onBlur = ({\n    target: { value },\n  }: React.FocusEvent<HTMLInputElement | any>) => onBlur(id, value);\n  const _onFocus = ({\n    target: { value },\n  }: React.FocusEvent<HTMLInputElement | any>) => onFocus(id, value);\n\n  return (\n    <FormControl\n      mb={1}\n      {...chakraProps}\n      isDisabled={disabled || readonly}\n      isRequired={required}\n      isReadOnly={readonly}\n      isInvalid={rawErrors && rawErrors.length > 0}\n    >\n      {displayLabel ? (\n        <FormLabel htmlFor={id}>{label || schema.title}</FormLabel>\n      ) : null}\n      <NumberInput\n        value={value ?? \"\"}\n        onChange={_onChange}\n        onBlur={_onBlur}\n        onFocus={_onFocus}\n        aria-describedby={ariaDescribedByIds<T>(id)}\n      >\n        <NumberInputField id={id} name={id} />\n        <NumberInputStepper>\n          <NumberIncrementStepper />\n          <NumberDecrementStepper />\n        </NumberInputStepper>\n      </NumberInput>\n    </FormControl>\n  );\n}\n","import AltDateTimeWidget from \"../AltDateTimeWidget/AltDateTimeWidget\";\nimport AltDateWidget from \"../AltDateWidget/AltDateWidget\";\nimport CheckboxWidget from \"../CheckboxWidget/CheckboxWidget\";\nimport CheckboxesWidget from \"../CheckboxesWidget/CheckboxesWidget\";\nimport RadioWidget from \"../RadioWidget/RadioWidget\";\nimport RangeWidget from \"../RangeWidget/RangeWidget\";\nimport SelectWidget from \"../SelectWidget/SelectWidget\";\nimport TextareaWidget from \"../TextareaWidget/TextareaWidget\";\nimport UpDownWidget from \"../UpDownWidget/UpDownWidget\";\nimport {\n  FormContextType,\n  RegistryWidgetsType,\n  RJSFSchema,\n  StrictRJSFSchema,\n} from \"@rjsf/utils\";\n\nexport function generateWidgets<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(): RegistryWidgetsType<T, S, F> {\n  return {\n    AltDateTimeWidget,\n    AltDateWidget,\n    CheckboxWidget,\n    CheckboxesWidget,\n    RadioWidget,\n    RangeWidget,\n    SelectWidget,\n    TextareaWidget,\n    UpDownWidget,\n  };\n}\n\nexport default generateWidgets();\n","import { ThemeProps } from \"@rjsf/core\";\n\nimport { generateTemplates } from \"../Templates\";\nimport { generateWidgets } from \"../Widgets\";\nimport { FormContextType, RJSFSchema, StrictRJSFSchema } from \"@rjsf/utils\";\n\nexport function generateTheme<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(): ThemeProps<T, S, F> {\n  return {\n    templates: generateTemplates<T, S, F>(),\n    widgets: generateWidgets<T, S, F>(),\n  };\n}\n\nexport default generateTheme();\n","import { ComponentType } from \"react\";\nimport { withTheme, FormProps } from \"@rjsf/core\";\nimport { generateTheme } from \"../Theme\";\nimport { FormContextType, RJSFSchema, StrictRJSFSchema } from \"@rjsf/utils\";\n\nexport function generateForm<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(): ComponentType<FormProps<T, S, F>> {\n  return withTheme<T, S, F>(generateTheme<T, S, F>());\n}\n\nexport default generateForm();\n","import { Global } from \"@emotion/react\";\nimport * as React from \"react\";\n\n/**\n * \n * The reason we need this is for ChakraProvider styling in Playground. \n * The User Developer would be responsible for styling with ChakraProvider in their app.\n * \n * Exact duplicate of `@chakra-ui/react`'s `CSSReset` component. Except for the following:\n * \n  ```css\n    input {\n      border-width: revert;\n      border-color: revert;\n      border-style: revert;\n    }\n    .array-item > hr {\n      margin-top: 16px;\n      margin-bottom: 16px;\n    }\n  ```\n\n  It is located at the bottom of the styles string.\n */\nexport const CSSReset = () => (\n  <Global\n    styles={`\n      html {\n        line-height: 1.5;\n        -webkit-text-size-adjust: 100%;\n        font-family: system-ui, sans-serif;\n        -webkit-font-smoothing: antialiased;\n        text-rendering: optimizeLegibility;\n        -moz-osx-font-smoothing: grayscale;\n        touch-action: manipulation;\n      }\n      body {\n        position: relative;\n        min-height: 100%;\n        font-feature-settings: 'kern';\n      }\n      *,\n      *::before,\n      *::after {\n        border-width: 0;\n        border-style: solid;\n        box-sizing: border-box;\n      }\n      main {\n        display: block;\n      }\n      hr {\n        border-top-width: 1px;\n        box-sizing: content-box;\n        height: 0;\n        overflow: visible;\n      }\n      pre,\n      code,\n      kbd,\n      samp {\n        font-family: SFMono-Regular,  Menlo, Monaco, Consolas, monospace;\n        font-size: 1em;\n      }\n      a {\n        background-color: transparent;\n        color: inherit;\n        text-decoration: inherit;\n      }\n      abbr[title] {\n        border-bottom: none;\n        text-decoration: underline;\n        -webkit-text-decoration: underline dotted;\n        text-decoration: underline dotted;\n      }\n      b,\n      strong {\n        font-weight: bold;\n      }\n      small {\n        font-size: 80%;\n      }\n      sub,\n      sup {\n        font-size: 75%;\n        line-height: 0;\n        position: relative;\n        vertical-align: baseline;\n      }\n      sub {\n        bottom: -0.25em;\n      }\n      sup {\n        top: -0.5em;\n      }\n      img {\n        border-style: none;\n      }\n      button,\n      input,\n      optgroup,\n      select,\n      textarea {\n        font-family: inherit;\n        font-size: 100%;\n        line-height: 1.15;\n        margin: 0;\n      }\n      button,\n      input {\n        overflow: visible;\n      }\n      button,\n      select {\n        text-transform: none;\n      }\n      button::-moz-focus-inner,\n      [type=\"button\"]::-moz-focus-inner,\n      [type=\"reset\"]::-moz-focus-inner,\n      [type=\"submit\"]::-moz-focus-inner {\n        border-style: none;\n        padding: 0;\n      }\n      fieldset {\n        padding: 0.35em 0.75em 0.625em;\n      }\n      legend {\n        box-sizing: border-box;\n        color: inherit;\n        display: table;\n        max-width: 100%;\n        padding: 0;\n        white-space: normal;\n      }\n      progress {\n        vertical-align: baseline;\n      }\n      textarea {\n        overflow: auto;\n      }\n      [type=\"checkbox\"],\n      [type=\"radio\"] {\n        box-sizing: border-box;\n        padding: 0;\n      }\n      [type=\"number\"]::-webkit-inner-spin-button,\n      [type=\"number\"]::-webkit-outer-spin-button {\n        -webkit-appearance: none !important;\n      }\n      input[type=\"number\"] {\n        -moz-appearance: textfield;\n      }\n      [type=\"search\"] {\n        -webkit-appearance: textfield;\n        outline-offset: -2px;\n      }\n      [type=\"search\"]::-webkit-search-decoration {\n        -webkit-appearance: none !important;\n      }\n      ::-webkit-file-upload-button {\n        -webkit-appearance: button;\n        font: inherit;\n      }\n      details {\n        display: block;\n      }\n      summary {\n        display: list-item;\n      }\n      template {\n        display: none;\n      }\n      [hidden] {\n        display: none !important;\n      }\n      body,\n      blockquote,\n      dl,\n      dd,\n      h1,\n      h2,\n      h3,\n      h4,\n      h5,\n      h6,\n      hr,\n      figure,\n      p,\n      pre {\n        margin: 0;\n      }\n      button {\n        background: transparent;\n        padding: 0;\n      }\n      fieldset {\n        margin: 0;\n        padding: 0;\n      }\n      ol,\n      ul {\n        margin: 0;\n        padding: 0;\n      }\n      textarea {\n        resize: vertical;\n      }\n      button,\n      [role=\"button\"] {\n        cursor: pointer;\n      }\n      button::-moz-focus-inner {\n        border: 0 !important;\n      }\n      table {\n        border-collapse: collapse;\n      }\n      h1,\n      h2,\n      h3,\n      h4,\n      h5,\n      h6 {\n        font-size: inherit;\n        font-weight: inherit;\n      }\n      button,\n      input,\n      optgroup,\n      select,\n      textarea {\n        padding: 0;\n        line-height: inherit;\n        color: inherit;\n      }\n      img,\n      svg,\n      video,\n      canvas,\n      audio,\n      iframe,\n      embed,\n      object {\n        display: block;\n      }\n      img,\n      video {\n        max-width: 100%;\n        height: auto;\n      }\n      [data-js-focus-visible] :focus:not([data-focus-visible-added]) {\n        outline: none;\n        box-shadow: none;\n      }\n      select::-ms-expand {\n        display: none;\n      }\n      input {\n        border-width: revert;\n        border-color: revert;\n        border-style: revert;\n      }\n      .array-item > hr {\n        margin-top: 16px;\n        margin-bottom: 16px;\n      }\n    `}\n  />\n);\n\nexport default CSSReset;\n","import * as React from \"react\";\nimport { CacheProvider } from \"@emotion/react\";\nimport createCache from \"@emotion/cache\";\nimport weakMemoize from \"@emotion/weak-memoize\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\nimport CSSReset from \"./CssReset\";\n\n/**\n * __createChakraFrameProvider is used to ensure that <Global> emotion components\n * can be rendered within an iframe without changing the styles of the parent page.\n * Required for using Chakra UI in the playground.\n *\n * We have to define ChakraFrameProvider in this library, as opposed to the playground,\n * in order to avoid conflicting versions of emotion, which breaks the styling.\n *\n * NOTE: This is an internal component only used by @rjsf/playground (no\n * backwards compatibility guarantees!)\n *\n * From: https://codesandbox.io/s/p98y9o7jz0?file=/src/frame-provider.js:0-650\n * Also see: https://github.com/emotion-js/emotion/issues/760#issuecomment-404353706\n */\n\nconst memoizedCreateCacheWithContainer = weakMemoize(\n  (container: HTMLElement) => {\n    const newCache = createCache({ container, key: \"rjsf\" });\n    return newCache;\n  }\n);\n\nexport const __createChakraFrameProvider =\n  (props: any) =>\n  ({ document }: any) => {\n    return (\n      <div style={{ margin: 2 }}>\n        <CacheProvider value={memoizedCreateCacheWithContainer(document.head)}>\n          <ChakraProvider resetCSS={false}>\n            <CSSReset />\n            {props.children}\n          </ChakraProvider>\n        </CacheProvider>\n      </div>\n    );\n  };\n"],"names":["AddButton","_ref","uiSchema","props","_objectWithoutPropertiesLoose","_excluded","React","createElement","Button","_extends","leftIcon","AddIcon","ArrayFieldItemTemplate","children","disabled","hasToolbar","hasMoveDown","hasMoveUp","hasRemove","index","onDropIndexClick","onReorderClick","readonly","registry","_registry$templates$B","templates","ButtonTemplates","MoveDownButton","MoveUpButton","RemoveButton","onRemoveClick","useMemo","onArrowUpClick","onArrowDownClick","HStack","alignItems","py","Box","w","ButtonGroup","isAttached","mb","onClick","ArrayFieldTemplate","canAdd","idSchema","items","onAddClick","required","schema","title","uiOptions","getUiOptions","ArrayFieldDescriptionTemplate","getTemplate","ArrayFieldTitleTemplate","description","Grid","key","$id","GridItem","length","map","itemProps","justifySelf","mt","className","getChakra","_ref$uiSchema","chakraProps","chakra","Object","keys","forEach","shouldForwardProp","BaseInputTemplate","id","value","label","onChange","onBlur","onFocus","options","rawErrors","autofocus","placeholder","inputProps","getInputProps","type","displayLabel","schemaUtils","getDisplayLabel","FormControl","isDisabled","isRequired","isReadOnly","isInvalid","FormLabel","htmlFor","Input","name","target","emptyValue","_ref2","_ref3","autoFocus","list","examples","examplesId","undefined","ariaDescribedByIds","Array","isArray","concat","includes","example","DescriptionField","Text","Fragment","ErrorList","errors","Alert","flexDirection","gap","status","AlertTitle","List","error","i","ListItem","ListIcon","as","WarningIcon","color","stack","ChakraIconButton","icon","otherProps","IconButton","displayName","ChakraIconButton$1","memo","ArrowDownIcon","ArrowUpIcon","DeleteIcon","FieldErrorTemplate","_props$errors","errorId","FormErrorMessage","FieldHelpTemplate","help","helpId","FormHelperText","FieldTemplate","classNames","style","hidden","onDropPropertyClick","onKeyChange","_props$rawErrors","rawDescription","WrapIfAdditionalTemplate","display","ObjectFieldTemplate","properties","formData","TitleFieldTemplate","DescriptionFieldTemplate","titleId","descriptionId","element","content","canExpand","SubmitButton","getSubmitButtonOptions","submitText","norender","marginTop","variant","TitleField","Heading","Divider","ADDITIONAL_PROPERTY_FLAG","defaultValue","generateTemplates","ErrorListTemplate","Templates","rangeOptions","start","stop","push","pad","DateElement","widgets","SelectWidget","elemValue","select","enumOptions","range","AltDateWidget","showTime","useState","parseDateString","state","_useState","setState","useEffect","data","handleChange","property","nextValue","_extends2","nextState","every","readyForChange","toDateString","flexWrap","justify","yearsRange","year","month","day","hour","minute","second","elemProps","elemId","mr","hideNowButton","e","event","preventDefault","Date","toJSON","handleNow","hideClearButton","AltDateTimeWidget","CheckboxWidget","schemaRequiresTrueValue","Checkbox","isChecked","checked","CheckboxesWidget","enumDisabled","checkboxesValues","_onBlur","enumOptionsValueForIndex","_onFocus","row","inline","selectedIndexes","enumOptionsIndexForValue","CheckboxGroup","option","Stack","direction","enumOptionsIsSelected","itemDisabled","indexOf","optionId","String","RadioWidget","selectedIndex","RadioGroup","Radio","RangeWidget","sliderWidgetProps","rangeSpec","Slider","SliderTrack","SliderFilledTrack","SliderThumb","multiple","_valueLabelMap","displayEnumOptions","isMultiple","Boolean","formValue","Select","inputId","isMulti","closeMenuOnSelect","v","TextareaWidget","Textarea","_ref4","UpDownWidget","NumberInput","NumberInputField","NumberInputStepper","NumberIncrementStepper","NumberDecrementStepper","generateWidgets","defaultProps","_AltDateWidget","getFullYear","Widgets","generateTheme","Theme","generateForm","withTheme","Form","CSSReset","Global","styles","memoizedCreateCacheWithContainer","weakMemoize","container","createCache","margin","CacheProvider","document","head","ChakraProvider","resetCSS"],"mappings":"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"}